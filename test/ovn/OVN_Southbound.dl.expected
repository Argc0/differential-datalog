import types

input relation SB_Global (
    _uuid: uuid,
    nb_cfg: integer,
    external_ids: Map<string,string>,
    connections: Set<uuid>,
    ssl: option_t<uuid>
)
input relation Chassis (
    _uuid: uuid,
    name: string,
    hostname: string,
    encaps: Set<uuid>,
    vtep_logical_switches: Set<string>,
    nb_cfg: integer,
    external_ids: Map<string,string>
)
input relation Encap (
    _uuid: uuid,
    __type: string,
    options: Map<string,string>,
    ip: string,
    chassis_name: string
)
input relation Address_Set (
    _uuid: uuid,
    name: string,
    addresses: Set<string>
)
input relation Port_Group (
    _uuid: uuid,
    name: string,
    ports: Set<string>
)
input relation Logical_Flow (
    _uuid: uuid,
    logical_datapath: uuid,
    pipeline: string,
    table_id: integer,
    priority: integer,
    __match: string,
    actions: string,
    external_ids: Map<string,string>
)
input relation Multicast_Group (
    _uuid: uuid,
    datapath: uuid,
    name: string,
    tunnel_key: integer,
    ports: Set<uuid>
)
input relation Meter (
    _uuid: uuid,
    name: string,
    unit: string,
    bands: Set<uuid>
)
input relation Meter_Band (
    _uuid: uuid,
    action: string,
    rate: integer,
    burst_size: integer
)
input relation Datapath_Binding (
    _uuid: uuid,
    tunnel_key: integer,
    external_ids: Map<string,string>
)
input relation Port_Binding (
    _uuid: uuid,
    logical_port: string,
    __type: string,
    gateway_chassis: Set<uuid>,
    options: Map<string,string>,
    datapath: uuid,
    tunnel_key: integer,
    parent_port: option_t<string>,
    tag: option_t<integer>,
    chassis: option_t<uuid>,
    mac: Set<string>,
    nat_addresses: Set<string>,
    external_ids: Map<string,string>
)
input relation MAC_Binding (
    _uuid: uuid,
    logical_port: string,
    ip: string,
    mac: string,
    datapath: uuid
)
input relation DHCP_Options (
    _uuid: uuid,
    name: string,
    code: integer,
    __type: string
)
input relation DHCPv6_Options (
    _uuid: uuid,
    name: string,
    code: integer,
    __type: string
)
input relation Connection (
    _uuid: uuid,
    target: string,
    max_backoff: option_t<integer>,
    inactivity_probe: option_t<integer>,
    read_only: bool,
    role: string,
    other_config: Map<string,string>,
    external_ids: Map<string,string>,
    is_connected: bool,
    status: Map<string,string>
)
input relation SSL (
    _uuid: uuid,
    private_key: string,
    certificate: string,
    ca_cert: string,
    bootstrap_ca_cert: bool,
    ssl_protocols: string,
    ssl_ciphers: string,
    external_ids: Map<string,string>
)
input relation DNS (
    _uuid: uuid,
    records: Map<string,string>,
    datapaths: Set<uuid>,
    external_ids: Map<string,string>
)
input relation RBAC_Role (
    _uuid: uuid,
    name: string,
    permissions: Map<string,uuid>
)
input relation RBAC_Permission (
    _uuid: uuid,
    table: string,
    authorization: Set<string>,
    insert_delete: bool,
    update: Set<string>
)
input relation Gateway_Chassis (
    _uuid: uuid,
    name: string,
    chassis: option_t<uuid>,
    priority: integer,
    external_ids: Map<string,string>,
    options: Map<string,string>
)